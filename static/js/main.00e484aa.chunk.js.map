{"version":3,"sources":["redux/types/appTypes.ts","redux/useTypedSelector.ts","redux/actions/actions.ts","redux/types/countryTypes.ts","Components/Header/Header.tsx","redux/actions/countryActions.ts","Components/Selectors/Selectors.tsx","Components/Countries/Country.tsx","Components/Countries/CountriesList.tsx","Components/Loader/Loader.js","Components/Pages/MainPage.tsx","Components/Pages/CountryDetailsPage/CountryDetailsPage.tsx","App.tsx","redux/reducers/appReducer.ts","redux/reducers/countryReducer.ts","redux/reducers/rootReducer.ts","redux/store.ts","index.tsx"],"names":["actionsTypes","modes","useTypedSelector","useSelector","toggleDarkMode","localStorage","setItem","DARK","type","TOGGLE_DARK_MODE","toggleLightMode","LIGHT","TOGGLE_LIGHT_MODE","Header","mode","state","app","dispatch","useDispatch","className","onClick","toggleFunction","serverRequest","insideFunc","a","START_LOADING","console","log","STOP_LOADING","Selectors","allCountriesLiteral","useState","isDropDownActive","setIsDropDownActive","region","country","inputName","name","activeStyles","arrow","transform","dropDown","maxHeight","handleFilterRegionClick","event","payload","liText","currentTarget","innerText","FILTER","onChange","preventDefault","target","value","SEARCH","placeholder","prev","style","map","CountryCard","src","flag","alt","population","capital","CountriesList","countries","to","Loader","MainPage","loading","useEffect","length","axios","get","response","INITIAL","data","CountryDetailsPage","useParams","history","useHistory","detailedCountry","url","allCountriesResponse","allCountriesData","borders","border","find","alpha3Code","FIND","findCountry","detailsMain","stat","nativeName","subregion","detailsSecondary","topLevelDomain","join","currencies","el","languages","renderDetails","details","push","App","basename","exact","path","initialState","getItem","appReducer","action","undefined","allCountries","countryReducer","filterFunc","regionEquals","nameEquals","toLowerCase","startsWith","filter","rootReducer","combineReducers","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00e484aa.chunk.js","sourcesContent":["export enum actionsTypes {\r\n  TOGGLE_DARK_MODE = \"dark mode\",\r\n  TOGGLE_LIGHT_MODE = \"light mode\",\r\n  START_LOADING = \"loading start\",\r\n  STOP_LOADING = \"loading stop\",\r\n}\r\n\r\nexport interface appAction {\r\n  type: actionsTypes;\r\n}\r\n\r\nexport enum modes {\r\n  DARK = \"dark\",\r\n  LIGHT = \"light\",\r\n}\r\n\r\nexport interface AppState {\r\n  mode: modes | string;\r\n  loading: boolean;\r\n}\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"./reducers/rootReducer\";\r\n\r\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport default useTypedSelector;\r\n","import { actionsTypes, appAction, modes } from \"../types/appTypes\";\r\n\r\nexport const toggleDarkMode = (): appAction => {\r\n  localStorage.setItem(\"mode\", modes.DARK);\r\n  return { type: actionsTypes.TOGGLE_DARK_MODE };\r\n};\r\nexport const toggleLightMode = (): appAction => {\r\n  localStorage.setItem(\"mode\", modes.LIGHT);\r\n  return { type: actionsTypes.TOGGLE_LIGHT_MODE };\r\n};\r\n\r\nexport const startLoading = (): appAction => ({\r\n  type: actionsTypes.START_LOADING,\r\n});\r\nexport const stopLoading = (): appAction => ({\r\n  type: actionsTypes.STOP_LOADING,\r\n});\r\n","interface Currencies {\r\n  code: string;\r\n  name: string;\r\n  symbol: string;\r\n}\r\ninterface Languages {\r\n  name: string;\r\n}\r\nexport interface Country {\r\n  flag: string;\r\n  name: string;\r\n  population: number;\r\n  region: string;\r\n  capital: string;\r\n  nativeName: string;\r\n  subregion: string;\r\n  topLevelDomain: string[];\r\n  currencies: Currencies[];\r\n  languages: Languages[];\r\n  borders: string[];\r\n  alpha3Code: string;\r\n}\r\n\r\nexport interface CountryState {\r\n  countries: Country[];\r\n  region: string;\r\n  name: string;\r\n  detailedCountry: Country | undefined;\r\n}\r\n\r\nexport enum actionsTypes {\r\n  INITIAL = \"initial\",\r\n  FILTER = \"filter\",\r\n  SEARCH = \"search\",\r\n  FIND = \"find\",\r\n}\r\n\r\nexport interface initialAction {\r\n  type: actionsTypes.INITIAL;\r\n  payload: Country[];\r\n}\r\nexport interface findAction {\r\n  type: actionsTypes.FIND;\r\n  payload: Country;\r\n}\r\nexport interface filterAction {\r\n  type: actionsTypes.FILTER | actionsTypes.SEARCH;\r\n  payload: string;\r\n}\r\nexport type countryAction = initialAction | filterAction | findAction;\r\n","import React, { FC } from \"react\";\r\nimport useTypedSelector from \"../../redux/useTypedSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleDarkMode, toggleLightMode } from \"../../redux/actions/actions\";\r\nimport { modes } from \"../../redux/types/appTypes\";\r\n\r\nconst Header: FC = () => {\r\n  const mode = useTypedSelector((state) => state.app.mode);\r\n  const dispatch = useDispatch();\r\n  const handleSwitchModeClick = () => {\r\n    const toggleFunction =\r\n      mode === modes.LIGHT ? toggleDarkMode : toggleLightMode;\r\n    dispatch(toggleFunction());\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container header__content\">\r\n        <h1 className=\"header__logo\">Where in the world?</h1>\r\n        <div onClick={handleSwitchModeClick} className=\"header__theme-switch\">\r\n          <i className={mode === modes.LIGHT ? \"far fa-moon\" : \"fas fa-moon\"} />\r\n          <div className=\"header__theme-switch_title\">Dark Mode</div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  actionsTypes,\r\n  filterAction,\r\n  countryAction,\r\n  Country,\r\n} from \"../types/countryTypes\";\r\nimport { Dispatch } from \"redux\";\r\nimport axios from \"axios\";\r\nimport { startLoading, stopLoading } from \"./actions\";\r\nimport { appAction } from \"../types/appTypes\";\r\n\r\nconst serverRequest = async (\r\n  dispatch: Dispatch<countryAction | appAction>,\r\n  insideFunc: Function\r\n) => {\r\n  dispatch(startLoading());\r\n  try {\r\n    await insideFunc(dispatch);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  dispatch(stopLoading());\r\n};\r\n\r\nexport const loadCountries = () => {\r\n  return async (dispatch: Dispatch<countryAction | appAction>) => {\r\n    const url = \"https://restcountries.eu/rest/v2/all\";\r\n    const insideFunc = async (\r\n      dispatch: Dispatch<countryAction | appAction>\r\n    ) => {\r\n      const response = await axios.get<Country[]>(url);\r\n      dispatch({ type: actionsTypes.INITIAL, payload: response.data });\r\n    };\r\n    serverRequest(dispatch, insideFunc);\r\n  };\r\n};\r\n\r\nexport const findCountry = (name: string) => {\r\n  return async (dispatch: Dispatch<countryAction | appAction>) => {\r\n    const url = `https://restcountries.eu/rest/v2/name/${name}`;\r\n    const allCountriesUrl = \"https://restcountries.eu/rest/v2/all\";\r\n    const insideFunc = async (\r\n      dispatch: Dispatch<countryAction | appAction>\r\n    ) => {\r\n      const response = await axios.get<Country[]>(url);\r\n      const allCountriesResponse = await axios.get<Country[]>(allCountriesUrl);\r\n      const allCountriesData = allCountriesResponse.data;\r\n\r\n      response.data[0].borders = response.data[0].borders.map<string>(\r\n        (border) =>\r\n          allCountriesData.find((country) => country.alpha3Code === border)\r\n            ?.name || border\r\n      );\r\n      dispatch({ type: actionsTypes.FIND, payload: response.data[0] });\r\n    };\r\n    serverRequest(dispatch, insideFunc);\r\n  };\r\n};\r\n\r\nexport const filterCountries = (payload: string): filterAction => ({\r\n  type: actionsTypes.FILTER,\r\n  payload,\r\n});\r\nexport const searchCountries = (payload: string): filterAction => ({\r\n  type: actionsTypes.SEARCH,\r\n  payload,\r\n});\r\n","import { MouseEvent, ChangeEvent } from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  filterCountries,\r\n  searchCountries,\r\n} from \"../../redux/actions/countryActions\";\r\nimport useTypedSelector from \"../../redux/useTypedSelector\";\r\n\r\nexport const Selectors: FC = () => {\r\n  const allCountriesLiteral = \"All\";\r\n\r\n  const [isDropDownActive, setIsDropDownActive] = useState<boolean>(false);\r\n  const region = useTypedSelector((state) => state.country.region);\r\n  const inputName = useTypedSelector((state) => state.country.name);\r\n  const dispatch = useDispatch();\r\n\r\n  const activeStyles = {\r\n    arrow: {\r\n      transform: isDropDownActive ? \"rotateZ(-180deg)\" : \"\",\r\n    },\r\n    dropDown: {\r\n      maxHeight: isDropDownActive ? \"300px\" : \"\",\r\n    },\r\n  };\r\n\r\n  const handleDropdownClick = () => {\r\n    setIsDropDownActive((prev) => !prev);\r\n  };\r\n\r\n  const handleFilterRegionClick = (event: MouseEvent<HTMLLIElement>) => {\r\n    const liText = event.currentTarget.innerText;\r\n    const region: string = liText === allCountriesLiteral ? \"\" : liText;\r\n    setIsDropDownActive(false);\r\n    dispatch(filterCountries(region));\r\n  };\r\n\r\n  const handleNameInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    const name = event.target.value;\r\n    dispatch(searchCountries(name));\r\n  };\r\n\r\n  return (\r\n    <div className=\"selector\">\r\n      <div className=\"selector_search\">\r\n        <i className=\"fas fa-search\" />\r\n        <input\r\n          onChange={handleNameInput}\r\n          placeholder=\"Search for a country\"\r\n          type=\"text\"\r\n          value={inputName}\r\n        />\r\n      </div>\r\n      <div className=\"selector_filter\">\r\n        <div onClick={handleDropdownClick} className=\"selector_filter_main\">\r\n          {region ? region : \"Filter by Region\"}\r\n          <i\r\n            style={{ ...activeStyles.arrow }}\r\n            className=\"fas fa-chevron-down\"\r\n          />\r\n        </div>\r\n        <ul\r\n          style={{ ...activeStyles.dropDown }}\r\n          className=\"selector_filter_dropdown\"\r\n        >\r\n          {[\r\n            allCountriesLiteral,\r\n            \"Africa\",\r\n            \"Americas\",\r\n            \"Asia\",\r\n            \"Europe\",\r\n            \"Oceania\",\r\n          ].map((region) => (\r\n            <li\r\n              onClick={handleFilterRegionClick}\r\n              className=\"selector_filter_dropdown-item\"\r\n              key={region}\r\n            >\r\n              {region}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Country } from \"../../redux/types/countryTypes\";\r\nexport const CountryCard: FC<Country> = (country: Country) => {\r\n  return (\r\n    <div className=\"country\">\r\n      <img className=\"country_flag\" src={country.flag} alt={country.name} />\r\n      <div className=\"country_content\">\r\n        <h2 className=\"country_content-title\">{country.name}</h2>\r\n        <div className=\"country_content-stat\">\r\n          Population:{` `}\r\n          <span className=\"country_content-stat-value\">\r\n            {country.population}\r\n          </span>\r\n        </div>\r\n        <div className=\"country_content-stat\">\r\n          Region:{` `}\r\n          <span className=\"country_content-stat-value\">{country.region}</span>\r\n        </div>\r\n        <div className=\"country_content-stat\">\r\n          Capital:{` `}\r\n          <span className=\"country_content-stat-value\">{country.capital}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport useTypedSelector from \"../../redux/useTypedSelector\";\r\nimport { CountryCard } from \"./Country\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CountriesList: FC = () => {\r\n  const countries = useTypedSelector((state) => state.country.countries);\r\n  return (\r\n    <div className=\"country-list\">\r\n      {countries.map((country) => (\r\n        <Link key={country.name} to={`/details/${country.name}`}>\r\n          <CountryCard {...country} />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import \"./loader.css\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import { FC, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport useTypedSelector from \"../../redux/useTypedSelector\";\r\n\r\nimport { Selectors } from \"../Selectors/Selectors\";\r\nimport { CountriesList } from \"../Countries/CountriesList\";\r\nimport { loadCountries } from \"../../redux/actions/countryActions\";\r\nimport Loader from \"../Loader/Loader\";\r\nexport const MainPage: FC = () => {\r\n  const loading = useTypedSelector((state) => state.app.loading);\r\n  const countries = useTypedSelector((state) => state.country.countries);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(countries);\r\n\r\n    countries.length === 0 && dispatch(loadCountries());\r\n  }, []);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div>\r\n      <Selectors />\r\n      <CountriesList />\r\n    </div>\r\n  );\r\n};\r\n","import { FC, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useTypedSelector from \"../../../redux/useTypedSelector\";\r\nimport { findCountry } from \"../../../redux/actions/countryActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\ninterface params {\r\n  name: string;\r\n}\r\ninterface Details {\r\n  stat: string;\r\n  value: string | number;\r\n}\r\n\r\nexport const CountryDetailsPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { name } = useParams<params>();\r\n  const history = useHistory();\r\n\r\n  const country = useTypedSelector((state) => state.country.detailedCountry);\r\n  const loading = useTypedSelector((state) => state.app.loading);\r\n\r\n  useEffect(() => {\r\n    (!country || country.name !== name) && dispatch(findCountry(name));\r\n  }, [name]);\r\n  console.log(name);\r\n\r\n  if (loading || !country || country.name !== name) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const detailsMain: Array<Details> = [\r\n    {\r\n      stat: \"Native name\",\r\n      value: country.nativeName,\r\n    },\r\n    {\r\n      stat: \"Population\",\r\n      value: country.population,\r\n    },\r\n    {\r\n      stat: \"Region\",\r\n      value: country.region,\r\n    },\r\n    {\r\n      stat: \"Sub Region\",\r\n      value: country.subregion,\r\n    },\r\n    {\r\n      stat: \"Capital\",\r\n      value: country.capital,\r\n    },\r\n  ];\r\n  const detailsSecondary: Array<Details> = [\r\n    {\r\n      stat: \"Top Level Domain\",\r\n      value: country.topLevelDomain.join(\" \"),\r\n    },\r\n    {\r\n      stat: \"Currencies\",\r\n      value: country.currencies.map((el) => el.name).join(\" \"),\r\n    },\r\n    {\r\n      stat: \"Languages\",\r\n      value: country.languages.map((el) => el.name).join(\" \"),\r\n    },\r\n  ];\r\n\r\n  const renderDetails = (details: Array<Details>) => {\r\n    return details.map((el) => (\r\n      <div key={el.stat} className=\"country_content-stat\">\r\n        {`${el.stat}: `}\r\n        <span className=\"country_content-stat-value\">{el.value}</span>\r\n      </div>\r\n    ));\r\n  };\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n        className=\"go-back\"\r\n      >\r\n        <i className=\"fas fa-long-arrow-alt-left\"></i>Back\r\n      </button>\r\n      <div className=\"content\">\r\n        <img className=\"flag\" src={country.flag} alt={country.name} />\r\n        <div className=\"details\">\r\n          <h2 className=\"details-title\">{country.name}</h2>\r\n\r\n          <div className=\"details-stats\">\r\n            <div className=\"details-stats_main\">\r\n              {renderDetails(detailsMain)}\r\n            </div>\r\n            <div className=\"details-stats_secondary\">\r\n              {renderDetails(detailsSecondary)}\r\n            </div>\r\n          </div>\r\n          <div className=\"border-countries\">\r\n            <div className=\"border-countries_title\">Border Countries</div>\r\n            <div className=\"border-countries_values\">\r\n              {country.borders.map((border) => (\r\n                <Link\r\n                  to={`/details/${border}`}\r\n                  className=\"border-countries_values-item\"\r\n                  key={border}\r\n                >\r\n                  {border}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./style/style.css\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useTypedSelector from \"./redux/useTypedSelector\";\n\nimport Header from \"./Components/Header/Header\";\nimport { MainPage } from \"./Components/Pages/MainPage\";\nimport { CountryDetailsPage } from \"./Components/Pages/CountryDetailsPage/CountryDetailsPage\";\n\nfunction App() {\n  const mode = useTypedSelector((state) => state.app.mode);\n\n  return (\n    <div className={`theme--${mode}`}>\n      <div className=\"wrapper\">\n        <Header />\n        <div className=\"container\">\n          <Router basename=\"/\">\n            <Switch>\n              <Route exact path=\"/\">\n                <MainPage />\n              </Route>\n              <Route exact path=\"/details/:name\">\n                <CountryDetailsPage />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { actionsTypes, AppState, modes, appAction } from \"../types/appTypes\";\r\n\r\nconst initialState: AppState = {\r\n  mode: localStorage.getItem(\"mode\") || modes.DARK,\r\n  loading: true,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: appAction): AppState => {\r\n  switch (action.type) {\r\n    case actionsTypes.TOGGLE_DARK_MODE:\r\n      return { ...state, mode: modes.DARK };\r\n\r\n    case actionsTypes.TOGGLE_LIGHT_MODE:\r\n      return { ...state, mode: modes.LIGHT };\r\n\r\n    case actionsTypes.START_LOADING:\r\n      return { ...state, loading: true };\r\n\r\n    case actionsTypes.STOP_LOADING:\r\n      return { ...state, loading: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import {\r\n  CountryState,\r\n  countryAction,\r\n  actionsTypes,\r\n  Country,\r\n} from \"../types/countryTypes\";\r\n\r\nconst initialState: CountryState = {\r\n  countries: [],\r\n  region: \"\",\r\n  name: \"\",\r\n  detailedCountry: undefined,\r\n};\r\n\r\nlet allCountries: Country[] = [];\r\n\r\nconst countryReducer = (\r\n  state = initialState,\r\n  action: countryAction\r\n): CountryState => {\r\n  switch (action.type) {\r\n    case actionsTypes.INITIAL: {\r\n      allCountries = action.payload;\r\n      return { ...state, countries: action.payload };\r\n    }\r\n\r\n    case actionsTypes.FILTER: {\r\n      const filterFunc = (country: Country) => {\r\n        const regionEquals =\r\n          action.payload === \"\" ? true : country.region === action.payload;\r\n        let nameEquals = true;\r\n        if (state.name)\r\n          nameEquals = country.name\r\n            .toLowerCase()\r\n            .startsWith(state.name.toLowerCase());\r\n        return nameEquals && regionEquals;\r\n      };\r\n      return {\r\n        ...state,\r\n        countries: allCountries.filter(filterFunc),\r\n        region: action.payload,\r\n      };\r\n    }\r\n\r\n    case actionsTypes.SEARCH: {\r\n      const filterFunc = (country: Country) => {\r\n        const nameEquals = country.name\r\n          .toLowerCase()\r\n          .startsWith(action.payload.toLowerCase());\r\n        let regionEquals = true;\r\n        if (state.region) {\r\n          regionEquals = country.region === state.region;\r\n        }\r\n        return nameEquals && regionEquals;\r\n      };\r\n      return {\r\n        ...state,\r\n        countries: allCountries.filter(filterFunc),\r\n        name: action.payload,\r\n      };\r\n    }\r\n\r\n    case actionsTypes.FIND: {\r\n      return {\r\n        ...state,\r\n        detailedCountry: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default countryReducer;\r\n","import appReducer from \"./appReducer\";\r\nimport countryReducer from \"./countryReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  country: countryReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}